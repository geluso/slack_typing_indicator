exit
continue
channels.select {|c| c.name.include? 'seattle'}.length
channels.select {|c| c.name.include? 'seattle'}
channels.length
channels.select {|c| c.include? 'seattle'}
channels.map {|c| {{:name=>c.name, :id=>c.id}}.select {|c|c[:name].include? 'seattle'}
channels.map {|c| c.name}.select {|c|c.include? 'seattle'}
channels.map {|c| c.name}.filter {|c|c.include? 'seattle'}
channels.map {|c| c.name}.filter {|c|c.include? 'seattle}
channels.map {|c| c.name}
channel.name
channel
channels.detect {|c| c.name.include? 'seattle'}.map {|c|c.name}
channels.detect {|c| c.name.include? 'seattle'}.length
channels.detect {|c| c.name.include? 'seattle'}
channels.length
channel
n
delay
count
self.id
continue
data.username
data
continue
client.chat_postMessage(channel: '#random', text: 'messing around with slack API, ignore me!', as_user: true)
client
